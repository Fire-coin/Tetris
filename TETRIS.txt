Prog "TFIELD"
1->G
0->S
0->F
Fill(0, Mat F)
Locate 1, 7, "UR SCORE"
While G=1
    Locate 9, 7, S
    202->A ' The phantom square from which the relative coordinates going to be calculated
    1->D
    List 3[Int (7Ran#)+1]->H
    H->O
    For 1->I To 4
        Int (O/100)->P
        O-100P->P
        Int (P/10)->R
        P-10R->Q
        Int (O/100)->O
        R->List 4[2I-1]
        Q->List 4[2I]
    Next
    While D=1
        ' Add initial rendering and checking of shape
        Int(A/10)->Y
        A-10Y->X
        X->N ' Future value of X, which has to be checked first
        Y->M ' Future value of Y, which has to be checked first
        For 1->I To 4
            Getkey->K
            0->B ' A flag telling if rotation has been prompted to check
            List 4->List 5 ' Storying a copy of shape's coordinates before possible rotation
            If K=37 
                Then N+1->N
            IfEnd
            If K=28 
                Then N-1->N
            IfEnd
            If K=27 ' Performing clockwise rotation
                Then For 1->L To 4
                    List 4[2L-1]->T ' X coordinate of a point (on a relative scale)
                    4-List 4[2L]->List 4[2L-1] ' Putting -Y coordinate of a point (on a relative scale)
                    T->List 4[2L] ' Putting X coord
                Next
                1->B
            IfEnd
            If K=38 ' Performing counter clockwise rotation
                Then For 1->L To 4
                    List 4[2L-1]->T ' X coord of point
                    List 4[2L]->List 4[2L-1] ' Putting Y coord of point
                    4-T->List 4[2L] ' Putting -X coord of point
                Next
                1->B
            IfEnd
            If K=61
                Then 0->D
                0->G
            IfEnd
            If N!=X Or B=1
                Then For 1->J To 4 ' This is checking wheter prompted transformation is valid
                    List 4[2J-1]+N->Q ' The X coordinate of a point
                    Y-List 4[2J]->R ' The Y coordinate of a point
                    If Q>6 Or Q<2 Or R<2 ' Rejecting case for X
                        Then X->N
                        0->B
                        List 5->List 4
                    Else If Mat F[R-1, Q-1]=1
                            Then X->N
                            0->B
                            List 5->List 4
                        IfEnd
                    IfEnd
                Next
                If N!=X Or B=1 ' Redraws the shape if prompted transformation was valid
                    Then If N!=X ' Deleting old shape before translating 
                        Then For 1->J To 4
                            List 4[2J-1]+X->Q
                            Y-List 4[2J]->R
                            Locate R, Q, " "
                        Next
                    Else For 1->J To 4 ' Deleting old shape before rotation
                            List 5[2J-1]+X->Q
                            Y-List 5[2J]->R
                            Locate R, Q, " "
                        Next
                    IfEnd
                    For 1->J To 4 ' Drawing new shape after transformation
                        List 4[2J-1]+N->Q
                        Y-List 4[2J]->R
                        Locate R, Q, "*"
                    Next
                IfEnd
                N->X
            IfEnd
        Next
        M-1->M
        For 1->I To 4 ' Checking wheter shape can go down by 1
            List 4[2I-1]+X->Q
            M-List 4[2I]->R
            If Q>6 Or Q<2 Or R<2
                Then 0->D
            Else If Mat F[R-1,Q-1]=1
                    Then 0->D
                IfEnd
            IfEnd
        Next
        If D=1 ' Moving shape 1 down
            Then For 1->I To 4
                List 4[2I-1]+X->Q
                Y-List 4[2I]->R
                Locate R, Q, " "
            Next
            M->Y
            N->X
            For 1->I To 4
                List 4[2I-1]+X->Q
                Y-List 4[2I]->R
                Locate R, Q, "*"
            Next
            10Y+X->A
        Else For 1->I To 4
                List 4[2I-1]+X->Q
                Y-List 4[2I]->R
                1->Mat F[R-1,Q-1]
            Next
        IfEnd
    WhileEnd
    Y->M
    0->W
    While M>=Y-4 And M>=2
        1->Z
        For 1->I To 5
            If Mat F[M-1, I]=0
                Then 0->Z
            IfEnd
        Next
        If Z=1
            Then For 2->I To 6
                    Locate M, I, " "
                Next
                For M->I To 20
                    For 1->J To 5
                        Mat F[I, J]->Mat F[I-1, J]
                    Next
                Next
            W+1->W
        IfEnd
        M-1->M
    WhileEnd
    If W!=0
        Then For M+1->I To 20
                For 2->J To 6
                    If Mat F[I-1, J-1]=1
                        Then Locate I, J, "*"
                    Else Locate I, J, " "
                    IfEnd
                Next
            Next
            If W=1
                Then S+40->S
            Else If W=2
                Then S+100->S
            Else If W=3
                Then S+300->S
            Else If W=4
                Then S+1200->S
            IfEnd
            IfEnd
            IfEnd
            IfEnd   
    IfEnd
WhileEnd
Locate 1, 1, "GAME OVER"
